class Solution {
public:
    int bitwiseComplement(int n) {
        
//                 if(n==0)
            
     
// return 1;
               
//         int power =1;
// int ans=0;
// while(n>0){
// int bit = n&1;
// if(bit==0){
// ans += (1*power);
// }
// n=n>>1;
// power = power*2;
// }
       
        
        
             
        
        
//         int m=n;
//         int mask=0;
//         //edge case when n=0
//         if(n == 0)
//             return 1;
    
//         while(m!=0){
//           mask = (mask << 1) | 1;
//           m = n >> 1;
            
//         }
//         int ans = (~n) & mask;
//         return ans;
    
              if (n == 0) return 1;
        int num = 0;
        while (num < n) {
            num = (num << 1) | 1;
        }
        return ~n & num;
    
    }
};
